import React, { useState } from 'react';
import styled from 'styled-components';
import { 
  Heart, 
  MessageCircle, 
  Share2, 
  Calendar, 
  ShoppingBag, 
  Wrench, 
  Search, 
  X
} from 'lucide-react';

// Minimal styled components for debugging
const Container = styled.div`
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem;
  color: ${props => props.theme?.colors?.text || '#FFFFFF'};
`;

const Header = styled.div`
  margin-bottom: 2rem;
  
  h1 {
    font-size: 2rem;
    font-family: ${props => props.theme?.fonts?.heading || "'Impact', sans-serif"};
    background: ${props => props.theme?.colors?.accentGradient || 'linear-gradient(45deg, #800000, #4A0404)'};
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin-bottom: 0.5rem;
  }
  
  p {
    color: ${props => `${props.theme?.colors?.text || '#FFFFFF'}CC`};
    font-size: 1rem;
  }
`;

const SearchBox = styled.div`
  position: relative;
  margin-bottom: 1rem;
  
  input {
    width: 100%;
    background: ${props => `${props.theme?.colors?.surface || 'rgba(255, 255, 255, 0.05)'}80`};
    border: 1px solid ${props => `${props.theme?.colors?.accent || '#800000'}30`};
    border-radius: 25px;
    padding: 0.75rem 3rem;
    color: ${props => props.theme?.colors?.text || '#FFFFFF'};
    font-size: 1rem;
    
    &:focus {
      outline: none;
      border-color: ${props => props.theme?.colors?.accent || '#800000'};
    }
    
    &::placeholder {
      color: ${props => `${props.theme?.colors?.text || '#FFFFFF'}60`};
    }
  }
  
  .icon {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: ${props => `${props.theme?.colors?.text || '#FFFFFF'}60`};
  }
`;

const Filters = styled.div`
  display: flex;
  gap: 0.5rem;
  margin-bottom: 1.5rem;
  overflow-x: auto;
  
  button {
    background: ${props => props.active ? 
      props.theme?.colors?.accent || '#800000' : 
      `${props.theme?.colors?.surface || 'rgba(255, 255, 255, 0.05)'}80`};
    border: 1px solid ${props => props.active ?
      props.theme?.colors?.accent || '#800000' :
      `${props.theme?.colors?.accent || '#800000'}30`};
    color: ${props => props.active ? '#FFFFFF' : props.theme?.colors?.text || '#FFFFFF'};
    padding: 0.6rem 1rem;
    border-radius: 20px;
    cursor: pointer;
    font-size: 0.8rem;
    white-space: nowrap;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s;
    
    &:hover {
      opacity: 0.9;
    }
    
    svg {
      width: 14px;
      height: 14px;
    }
  }
`;

const PostCard = styled.div`
  background: ${props => `${props.theme?.colors?.surface || 'rgba(255, 255, 255, 0.05)'}90`};
  border-radius: 12px;
  border: 1px solid ${props => `${props.theme?.colors?.accent || '#800000'}30`};
  margin-bottom: 1.5rem;
  overflow: hidden;
  transition: all 0.3s ease;
  
  &:hover {
    transform: translateY(-2px);
    border-color: ${props => props.theme?.colors?.accent || '#800000'};
  }
`;

const PostHeader = styled.div`
  padding: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  
  .shop-info {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    
    .avatar {
      width: 48px;
      height: 48px;
      border-radius: 50%;
      background: ${props => props.theme?.colors?.accentGradient || 'linear-gradient(45deg, #800000, #4A0404)'};
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      font-weight: bold;
      font-size: 1.1rem;
    }
    
    .info {
      h3 {
        font-size: 1rem;
        font-weight: 600;
        color: ${props => props.theme?.colors?.text || '#FFFFFF'};
        margin: 0 0 0.25rem 0;
      }
      
      p {
        font-size: 0.85rem;
        color: ${props => `${props.theme?.colors?.text || '#FFFFFF'}80`};
        margin: 0;
      }
    }
  }
  
  .badge {
    padding: 0.4rem 0.8rem;
    border-radius: 15px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    display: flex;
    align-items: center;
    gap: 0.4rem;
    background: ${props => `${props.theme?.colors?.accent || '#800000'}20`};
    color: ${props => props.theme?.colors?.accent || '#800000'};
    
    svg {
      width: 14px;
      height: 14px;
    }
  }
`;

const PostContent = styled.div`
  padding: 0 1rem 1rem 1rem;
  
  p {
    color: ${props => `${props.theme?.colors?.text || '#FFFFFF'}E6`};
    font-size: 0.95rem;
    line-height: 1.6;
    margin: 0;
  }
`;

const ItemDisplay = styled.div`
  padding: 0 1rem 1rem 1rem;
  
  img {
    width: 100%;
    height: 250px;
    object-fit: cover;
    border-radius: 8px;
    margin-bottom: 1rem;
  }
  
  .item-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    
    .name {
      font-weight: 600;
      font-size: 1rem;
      color: ${props => props.theme?.colors?.text || '#FFFFFF'};
    }
    
    .price {
      font-size: 1.2rem;
      font-weight: bold;
      color: ${props => props.theme?.colors?.accent || '#800000'};
    }
  }
`;

const PostActions = styled.div`
  border-top: 1px solid ${props => `${props.theme?.colors?.accent || '#800000'}20`};
  padding: 0.75rem 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  
  .action-group {
    display: flex;
    gap: 1rem;
  }
  
  button {
    background: transparent;
    border: none;
    color: ${props => `${props.theme?.colors?.text || '#FFFFFF'}99`};
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem;
    border-radius: 8px;
    font-size: 0.9rem;
    transition: all 0.3s;
    
    &:hover {
      background: ${props => `${props.theme?.colors?.accent || '#800000'}10`};
      color: ${props => props.theme?.colors?.text || '#FFFFFF'};
    }
    
    &.liked {
      color: #ef4444;
      
      svg {
        fill: #ef4444;
      }
    }
    
    svg {
      width: 18px;
      height: 18px;
    }
  }
`;

const Empty = styled.div`
  text-align: center;
  padding: 3rem 1rem;
  
  svg {
    width: 64px;
    height: 64px;
    color: ${props => `${props.theme?.colors?.text || '#FFFFFF'}40`};
    margin-bottom: 1rem;
  }
  
  h3 {
    font-size: 1.2rem;
    color: ${props => props.theme?.colors?.text || '#FFFFFF'};
    margin-bottom: 0.5rem;
  }
  
  p {
    color: ${props => `${props.theme?.colors?.text || '#FFFFFF'}80`};
    font-size: 0.9rem;
  }
`;

// Component
const MediaFeed = ({ theme }) => {
  const [searchTerm, setSearchTerm] = useState('');
  const [activeFilter, setActiveFilter] = useState('all');
  const [posts, setPosts] = useState([
    {
      id: 1,
      shopName: "AutoCare Pro",
      shopAvatar: "AP",
      postType: "item",
      timestamp: "2 hours ago",
      content: "New inventory alert! Premium brake pads now in stock. Perfect for high-performance vehicles.",
      itemName: "Ceramic Brake Pad Set",
      itemPrice: "$129.99",
      itemImage: "https://images.unsplash.com/photo-1486262715619-67b85e0b08d3?w=400&h=300&fit=crop",
      likes: 24,
      comments: 5,
      isLiked: false
    },
    {
      id: 2,
      shopName: "Precision Motors",
      shopAvatar: "PM",
      postType: "item",
      timestamp: "5 hours ago",
      content: "Quality tools at affordable prices! Stock up on essentials.",
      itemName: "Professional Tool Set",
      itemPrice: "$199.99",
      itemImage: "https://images.unsplash.com/photo-1530124566582-a618bc2615dc?w=400&h=300&fit=crop",
      likes: 18,
      comments: 3,
      isLiked: false
    },
    {
      id: 3,
      shopName: "QuickFix Garage",
      shopAvatar: "QG",
      postType: "item",
      timestamp: "1 day ago",
      content: "Fresh stock of premium motor oil. Keep your engine running smooth!",
      itemName: "Synthetic Motor Oil",
      itemPrice: "$45.99",
      itemImage: "https://images.unsplash.com/photo-1632839254560-89fda6a55cfb?w=400&h=300&fit=crop",
      likes: 12,
      comments: 7,
      isLiked: false
    }
  ]);

  console.log('MediaFeed rendering with theme:', theme);

  const filters = [
    { value: 'all', label: 'All Posts', icon: null },
    { value: 'item', label: 'Items', icon: <ShoppingBag /> },
    { value: 'service', label: 'Services', icon: <Wrench /> },
    { value: 'calendar', label: 'Events', icon: <Calendar /> }
  ];

  const filteredPosts = posts.filter(post => {
    const matchesSearch = searchTerm === '' || 
      post.shopName.toLowerCase().includes(searchTerm.toLowerCase()) ||
      post.content.toLowerCase().includes(searchTerm.toLowerCase());
    
    const matchesFilter = activeFilter === 'all' || post.postType === activeFilter;
    
    return matchesSearch && matchesFilter;
  });

  const toggleLike = (postId) => {
    setPosts(posts.map(post => 
      post.id === postId 
        ? { ...post, isLiked: !post.isLiked, likes: post.isLiked ? post.likes - 1 : post.likes + 1 }
        : post
    ));
  };

  return (
    <Container theme={theme}>
      <Header theme={theme}>
        <h1>Media Feed</h1>
        <p>Latest updates from shops you follow</p>
      </Header>

      <SearchBox theme={theme}>
        <Search size={18} className="icon" />
        <input
          type="text"
          placeholder="Search posts, shops, items..."
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
        />
      </SearchBox>

      <Filters theme={theme}>
        {filters.map(filter => (
          <button
            key={filter.value}
            active={activeFilter === filter.value}
            onClick={() => setActiveFilter(filter.value)}
          >
            {filter.icon}
            {filter.label}
          </button>
        ))}
      </Filters>

      {filteredPosts.length === 0 ? (
        <Empty theme={theme}>
          <Search />
          <h3>No posts found</h3>
          <p>{searchTerm ? `No results for "${searchTerm}"` : 'No posts available'}</p>
        </Empty>
      ) : (
        filteredPosts.map((post) => (
          <PostCard key={post.id} theme={theme}>
            <PostHeader theme={theme}>
              <div className="shop-info">
                <div className="avatar">{post.shopAvatar}</div>
                <div className="info">
                  <h3>{post.shopName}</h3>
                  <p>{post.timestamp}</p>
                </div>
              </div>
              <div className="badge">
                <ShoppingBag size={14} />
                New Item
              </div>
            </PostHeader>

            <PostContent theme={theme}>
              <p>{post.content}</p>
            </PostContent>

            {post.itemImage && (
              <ItemDisplay theme={theme}>
                <img src={post.itemImage} alt={post.itemName} />
                <div className="item-info">
                  <span className="name">{post.itemName}</span>
                  <span className="price">{post.itemPrice}</span>
                </div>
              </ItemDisplay>
            )}

            <PostActions theme={theme}>
              <div className="action-group">
                <button
                  className={post.isLiked ? 'liked' : ''}
                  onClick={() => toggleLike(post.id)}
                >
                  <Heart size={18} />
                  {post.likes}
                </button>
                <button>
                  <MessageCircle size={18} />
                  {post.comments}
                </button>
              </div>
              <button>
                <Share2 size={18} />
              </button>
            </PostActions>
          </PostCard>
        ))
      )}
    </Container>
  );
};

export default MediaFeed;