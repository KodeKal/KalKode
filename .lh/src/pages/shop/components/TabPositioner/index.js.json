{
    "sourceFile": "src/pages/shop/components/TabPositioner/index.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1735712623106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1735712638988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n // src/components/TabPositioner/index.js\n \n import React from 'react';\n import styled from 'styled-components';\n-import { DEFAULT_THEME } from '../../theme/theme';\n+import { DEFAULT_THEME } from '../../../theme/theme';\n \n const TabContainer = styled.div`\n   display: flex;\n   justify-content: center;\n"
                },
                {
                    "date": 1735865080069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n // src/components/TabPositioner/index.js\n \n import React from 'react';\n import styled from 'styled-components';\n-import { DEFAULT_THEME } from '../../../theme/theme';\n+import { DEFAULT_THEME } from '../../../../theme/theme';\n \n const TabContainer = styled.div`\n   display: flex;\n   justify-content: center;\n@@ -14,52 +14,53 @@\n   ${props => props.position === 'bottom' ? 'margin-top: auto;' : ''}\n   z-index: 90;\n `;\n \n+const TabContainer = styled.div`\n+  display: flex;\n+  gap: 1rem;\n+  ${props => {\n+    switch (props.position) {\n+      case 'left':\n+        return `\n+          position: fixed;\n+          left: 2rem;\n+          top: 50%;\n+          transform: translateY(-50%);\n+          flex-direction: column;\n+        `;\n+      case 'bottom':\n+        return `\n+          position: fixed;\n+          bottom: 2rem;\n+          left: 50%;\n+          transform: translateX(-50%);\n+          justify-content: center;\n+        `;\n+      default: // top\n+        return `\n+          position: fixed;\n+          top: 2rem;\n+          left: 50%;\n+          transform: translateX(-50%);\n+          justify-content: center;\n+        `;\n+    }\n+  }}\n+  z-index: 100;\n+`;\n+\n const Tab = styled.button`\n-  background: transparent;\n+  background: ${props => props.active ? \n+    `${props.theme?.colors?.accent}20` : \n+    'rgba(0, 0, 0, 0.3)'};\n   border: 1px solid ${props => props.active ? \n-    props.theme?.colors?.accent || DEFAULT_THEME.colors.accent : \n-    'rgba(255, 255, 255, 0.1)'};\n-  color: ${props => props.active ? \n-    props.theme?.colors?.text || DEFAULT_THEME.colors.text : \n-    `${props.theme?.colors?.text || DEFAULT_THEME.colors.text}80`};\n+    props.theme?.colors?.accent : \n+    'transparent'};\n+  color: ${props => props.theme?.colors?.text};\n   padding: 0.8rem 1.5rem;\n-  border-radius: 30px;\n-  font-family: ${props => props.theme?.fonts?.heading || DEFAULT_THEME.fonts.heading};\n+  border-radius: 8px;\n   cursor: pointer;\n-  transition: all 0.3s ease;\n-\n-  &:hover {\n-    background: ${props => props.theme?.colors?.surface || 'rgba(255, 255, 255, 0.05)'};\n-    border-color: ${props => props.theme?.colors?.accent || DEFAULT_THEME.colors.accent};\n-  }\n+  backdrop-filter: blur(10px);\n `;\n \n-const TabPositioner = ({ \n-  position, \n-  onPositionChange, \n-  activeTab, \n-  onTabChange, \n-  tabs, \n-  theme,\n-  isEditing = false // New prop to determine if position selector should be shown\n-}) => {\n-  return (\n-    <>\n-      <TabContainer position={position} theme={theme}>\n-        {tabs.map(tab => (\n-          <Tab\n-            key={tab.id}\n-            active={activeTab === tab.id}\n-            onClick={() => onTabChange(tab.id)}\n-            theme={theme}\n-          >\n-            {tab.label}\n-          </Tab>\n-        ))}\n-      </TabContainer>\n-    </>\n-  );\n-};\n-\n export default TabPositioner;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1735865131615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,20 +5,9 @@\n import { DEFAULT_THEME } from '../../../../theme/theme';\n \n const TabContainer = styled.div`\n   display: flex;\n-  justify-content: center;\n   gap: 1rem;\n-  padding: 1rem;\n-  position: ${props => props.position === 'left' ? 'fixed' : 'relative'};\n-  ${props => props.position === 'left' ? 'left: 0; top: 50%; transform: translateY(-50%);' : ''}\n-  ${props => props.position === 'bottom' ? 'margin-top: auto;' : ''}\n-  z-index: 90;\n-`;\n-\n-const TabContainer = styled.div`\n-  display: flex;\n-  gap: 1rem;\n   ${props => {\n     switch (props.position) {\n       case 'left':\n         return `\n@@ -62,5 +51,32 @@\n   cursor: pointer;\n   backdrop-filter: blur(10px);\n `;\n \n+const TabPositioner = ({ \n+  position, \n+  onPositionChange, \n+  activeTab, \n+  onTabChange, \n+  tabs, \n+  theme,\n+  isEditing = false // New prop to determine if position selector should be shown\n+}) => {\n+  return (\n+    <>\n+      <TabContainer position={position} theme={theme}>\n+        {tabs.map(tab => (\n+          <Tab\n+            key={tab.id}\n+            active={activeTab === tab.id}\n+            onClick={() => onTabChange(tab.id)}\n+            theme={theme}\n+          >\n+            {tab.label}\n+          </Tab>\n+        ))}\n+      </TabContainer>\n+    </>\n+  );\n+};\n+\n export default TabPositioner;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736262062809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,39 +4,19 @@\n import styled from 'styled-components';\n import { DEFAULT_THEME } from '../../../../theme/theme';\n \n const TabContainer = styled.div`\n+  position: fixed;\n+  top: 0;\n+  left: 50%;\n+  transform: translateX(-50%);\n   display: flex;\n   gap: 1rem;\n-  ${props => {\n-    switch (props.position) {\n-      case 'left':\n-        return `\n-          position: fixed;\n-          left: 2rem;\n-          top: 50%;\n-          transform: translateY(-50%);\n-          flex-direction: column;\n-        `;\n-      case 'bottom':\n-        return `\n-          position: fixed;\n-          bottom: 2rem;\n-          left: 50%;\n-          transform: translateX(-50%);\n-          justify-content: center;\n-        `;\n-      default: // top\n-        return `\n-          position: fixed;\n-          top: 2rem;\n-          left: 50%;\n-          transform: translateX(-50%);\n-          justify-content: center;\n-        `;\n-    }\n-  }}\n+  padding: 1rem;\n   z-index: 100;\n+  background: rgba(0, 0, 0, 0.3);\n+  backdrop-filter: blur(10px);\n+  border-radius: 0 0 12px 12px;\n `;\n \n const Tab = styled.button`\n   background: ${props => props.active ? \n"
                },
                {
                    "date": 1736262894262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,32 +5,45 @@\n import { DEFAULT_THEME } from '../../../../theme/theme';\n \n const TabContainer = styled.div`\n   position: fixed;\n-  top: 0;\n+  ${props => props.position === 'bottom' ? 'bottom: 2rem;' : 'top: 2rem;'}\n   left: 50%;\n   transform: translateX(-50%);\n   display: flex;\n-  gap: 1rem;\n-  padding: 1rem;\n+  gap: 2rem;\n+  padding: 1rem 2rem;\n   z-index: 100;\n-  background: rgba(0, 0, 0, 0.3);\n-  backdrop-filter: blur(10px);\n-  border-radius: 0 0 12px 12px;\n+  background: transparent;\n `;\n \n const Tab = styled.button`\n-  background: ${props => props.active ? \n-    `${props.theme?.colors?.accent}20` : \n-    'rgba(0, 0, 0, 0.3)'};\n-  border: 1px solid ${props => props.active ? \n+  background: transparent;\n+  border: none;\n+  color: ${props => props.active ? \n     props.theme?.colors?.accent : \n-    'transparent'};\n-  color: ${props => props.theme?.colors?.text};\n-  padding: 0.8rem 1.5rem;\n-  border-radius: 8px;\n+    `${props.theme?.colors?.text}80`};\n+  font-family: ${props => props.theme?.fonts?.heading};\n+  font-size: 1.1rem;\n+  padding: 0.5rem 1rem;\n   cursor: pointer;\n-  backdrop-filter: blur(10px);\n+  position: relative;\n+  transition: color 0.3s ease;\n+\n+  &::after {\n+    content: '';\n+    position: absolute;\n+    bottom: 0;\n+    left: 0;\n+    width: ${props => props.active ? '100%' : '0%'};\n+    height: 2px;\n+    background: ${props => props.theme?.colors?.accent};\n+    transition: width 0.3s ease;\n+  }\n+\n+  &:hover::after {\n+    width: 100%;\n+  }\n `;\n \n const TabPositioner = ({ \n   position, \n"
                },
                {
                    "date": 1736645950167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+// src/components/TabPositioner/index.js\n+\n+import React from 'react';\n+import styled from 'styled-components';\n+import { DEFAULT_THEME } from '../../../../theme/theme';\n+\n+const TabContainer = styled.div`\n+  position: fixed;\n+  ${props => props.position === 'bottom' ? 'bottom: 2rem;' : 'top: 2rem;'}\n+  left: 50%;\n+  transform: translateX(-50%);\n+  display: flex;\n+  gap: 2rem;\n+  padding: 1rem 2rem;\n+  z-index: 100;\n+  background: transparent;\n+`;\n+\n+const Tab = styled.button`\n+  background: transparent;\n+  border: none;\n+  color: ${props => props.active ? \n+    props.theme?.colors?.accent : \n+    `${props.theme?.colors?.text}80`};\n+  font-family: ${props => props.theme?.fonts?.heading};\n+  font-size: 1.1rem;\n+  padding: 0.5rem 1rem;\n+  cursor: pointer;\n+  position: relative;\n+  transition: color 0.3s ease;\n+\n+  &::after {\n+    content: '';\n+    position: absolute;\n+    bottom: 0;\n+    left: 0;\n+    width: ${props => props.active ? '100%' : '0%'};\n+    height: 2px;\n+    background: ${props => props.theme?.colors?.accent};\n+    transition: width 0.3s ease;\n+  }\n+\n+  &:hover::after {\n+    width: 100%;\n+  }\n+`;\n+\n+const TabPositioner = ({ \n+  position, \n+  onPositionChange, \n+  activeTab, \n+  onTabChange, \n+  tabs, \n+  theme,\n+  actionButton,\n+  isEditing = false // New prop to determine if position selector should be shown\n+}) => {\n+  return (\n+    <div style={{ display: 'flex', alignItems: 'center', gap: '1rem' }}>\n+      <TabContainer position={position} theme={theme}>\n+        {tabs.map(tab => (\n+          <Tab\n+            key={tab.id}\n+            active={activeTab === tab.id}\n+            onClick={() => onTabChange(tab.id)}\n+            theme={theme}\n+          >\n+            {tab.label}\n+          </Tab>\n+        ))}\n+      </TabContainer>\n+      {actionButton && actionButton} {/* Render the action button if provided */}\n+    </div>\n+    </>\n+  );\n+};\n+\n+export default TabPositioner;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1736645991505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,84 +70,8 @@\n         ))}\n       </TabContainer>\n       {actionButton && actionButton} {/* Render the action button if provided */}\n     </div>\n-    </>\n   );\n };\n \n-export default TabPositioner;\n-// src/components/TabPositioner/index.js\n-\n-import React from 'react';\n-import styled from 'styled-components';\n-import { DEFAULT_THEME } from '../../../../theme/theme';\n-\n-const TabContainer = styled.div`\n-  position: fixed;\n-  ${props => props.position === 'bottom' ? 'bottom: 2rem;' : 'top: 2rem;'}\n-  left: 50%;\n-  transform: translateX(-50%);\n-  display: flex;\n-  gap: 2rem;\n-  padding: 1rem 2rem;\n-  z-index: 100;\n-  background: transparent;\n-`;\n-\n-const Tab = styled.button`\n-  background: transparent;\n-  border: none;\n-  color: ${props => props.active ? \n-    props.theme?.colors?.accent : \n-    `${props.theme?.colors?.text}80`};\n-  font-family: ${props => props.theme?.fonts?.heading};\n-  font-size: 1.1rem;\n-  padding: 0.5rem 1rem;\n-  cursor: pointer;\n-  position: relative;\n-  transition: color 0.3s ease;\n-\n-  &::after {\n-    content: '';\n-    position: absolute;\n-    bottom: 0;\n-    left: 0;\n-    width: ${props => props.active ? '100%' : '0%'};\n-    height: 2px;\n-    background: ${props => props.theme?.colors?.accent};\n-    transition: width 0.3s ease;\n-  }\n-\n-  &:hover::after {\n-    width: 100%;\n-  }\n-`;\n-\n-const TabPositioner = ({ \n-  position, \n-  onPositionChange, \n-  activeTab, \n-  onTabChange, \n-  tabs, \n-  theme,\n-  isEditing = false // New prop to determine if position selector should be shown\n-}) => {\n-  return (\n-    <>\n-      <TabContainer position={position} theme={theme}>\n-        {tabs.map(tab => (\n-          <Tab\n-            key={tab.id}\n-            active={activeTab === tab.id}\n-            onClick={() => onTabChange(tab.id)}\n-            theme={theme}\n-          >\n-            {tab.label}\n-          </Tab>\n-        ))}\n-      </TabContainer>\n-    </>\n-  );\n-};\n-\n export default TabPositioner;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1735712623106,
            "name": "Commit-0",
            "content": "// src/components/TabPositioner/index.js\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { DEFAULT_THEME } from '../../theme/theme';\n\nconst TabContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  padding: 1rem;\n  position: ${props => props.position === 'left' ? 'fixed' : 'relative'};\n  ${props => props.position === 'left' ? 'left: 0; top: 50%; transform: translateY(-50%);' : ''}\n  ${props => props.position === 'bottom' ? 'margin-top: auto;' : ''}\n  z-index: 90;\n`;\n\nconst Tab = styled.button`\n  background: transparent;\n  border: 1px solid ${props => props.active ? \n    props.theme?.colors?.accent || DEFAULT_THEME.colors.accent : \n    'rgba(255, 255, 255, 0.1)'};\n  color: ${props => props.active ? \n    props.theme?.colors?.text || DEFAULT_THEME.colors.text : \n    `${props.theme?.colors?.text || DEFAULT_THEME.colors.text}80`};\n  padding: 0.8rem 1.5rem;\n  border-radius: 30px;\n  font-family: ${props => props.theme?.fonts?.heading || DEFAULT_THEME.fonts.heading};\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${props => props.theme?.colors?.surface || 'rgba(255, 255, 255, 0.05)'};\n    border-color: ${props => props.theme?.colors?.accent || DEFAULT_THEME.colors.accent};\n  }\n`;\n\nconst TabPositioner = ({ \n  position, \n  onPositionChange, \n  activeTab, \n  onTabChange, \n  tabs, \n  theme,\n  isEditing = false // New prop to determine if position selector should be shown\n}) => {\n  return (\n    <>\n      <TabContainer position={position} theme={theme}>\n        {tabs.map(tab => (\n          <Tab\n            key={tab.id}\n            active={activeTab === tab.id}\n            onClick={() => onTabChange(tab.id)}\n            theme={theme}\n          >\n            {tab.label}\n          </Tab>\n        ))}\n      </TabContainer>\n    </>\n  );\n};\n\nexport default TabPositioner;"
        }
    ]
}