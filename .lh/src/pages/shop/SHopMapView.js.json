{
    "sourceFile": "src/pages/shop/SHopMapView.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1736990638280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1736990638280,
            "name": "Commit-0",
            "content": "// Save this file at: src/pages/ShopMapView.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { db } from '../firebase/config';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { getCoordinatesFromZip } from '../services/locationService';\r\n\r\nconst MapPageContainer = styled.div`\r\n  min-height: 100vh;\r\n  background: #000000;\r\n  color: #FFFFFF;\r\n`;\r\n\r\nconst MapWrapper = styled.div`\r\n  width: 100%;\r\n  height: calc(100vh - 80px);\r\n  margin-top: 80px;\r\n\r\n  .leaflet-container {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  .leaflet-popup-content-wrapper {\r\n    background: rgba(0, 0, 0, 0.8);\r\n    color: white;\r\n  }\r\n\r\n  .leaflet-popup-tip {\r\n    background: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nconst Header = styled.header`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 80px;\r\n  background: rgba(0, 0, 0, 0.9);\r\n  backdrop-filter: blur(10px);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 2rem;\r\n  z-index: 1000;\r\n  border-bottom: 1px solid rgba(128, 0, 0, 0.3);\r\n`;\r\n\r\nconst ShopMapView = () => {\r\n  const navigate = useNavigate();\r\n  const [shops, setShops] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchShops = async () => {\r\n      try {\r\n        const shopsRef = collection(db, 'shops');\r\n        const snapshot = await getDocs(shopsRef);\r\n        \r\n        const shopsData = await Promise.all(snapshot.docs.map(async doc => {\r\n          const data = doc.data();\r\n          if (data.location?.zipCode) {\r\n            const coordinates = await getCoordinatesFromZip(data.location.zipCode);\r\n            return {\r\n              id: doc.id,\r\n              ...data,\r\n              coordinates\r\n            };\r\n          }\r\n          return null;\r\n        }));\r\n\r\n        setShops(shopsData.filter(Boolean));\r\n      } catch (error) {\r\n        console.error('Error fetching shops:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchShops();\r\n  }, []);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <MapPageContainer>\r\n      <Header>\r\n        <div onClick={() => navigate('/')}>KALKODE</div>\r\n      </Header>\r\n      \r\n      <MapWrapper>\r\n        <MapContainer \r\n          center={[39.8283, -98.5795]} // Center of US\r\n          zoom={4}\r\n          scrollWheelZoom={true}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {shops.map(shop => (\r\n            shop.coordinates && (\r\n              <Marker\r\n                key={shop.id}\r\n                position={[shop.coordinates.lat, shop.coordinates.lng]}\r\n              >\r\n                <Popup>\r\n                  <div style={{ color: 'white', padding: '0.5rem' }}>\r\n                    <h3>{shop.name}</h3>\r\n                    <p>{shop.description}</p>\r\n                    <button onClick={() => navigate(`/shop/${shop.id}`)}>\r\n                      View Shop\r\n                    </button>\r\n                  </div>\r\n                </Popup>\r\n              </Marker>\r\n            )\r\n          ))}\r\n        </MapContainer>\r\n      </MapWrapper>\r\n    </MapPageContainer>\r\n  );\r\n};\r\n\r\nexport default ShopMapView;"
        }
    ]
}