{
    "sourceFile": "src/pages/shop/LiveShopCreation.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1735712337787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1735712395999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,8 @@\n import EditableText from './components/EditableComponents/EditableText';\n import EditableImage from './components/EditableComponents/EditableImage';\n import EditableItem from './components/EditableComponents/EditableItem';\n import TabPositioner from './components/TabPositioner';\n-import { DEFAULT_THEME } from '../../theme/theme';\n \n // Theme Constants\n export const ELEMENTAL_THEMES = {\n   WATER: {\n"
                },
                {
                    "date": 1735712411382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,9 @@\n import { useTempStore } from '../../contexts/TempStoreContext';\n import EditableText from './components/EditableComponents/EditableText';\n import EditableImage from './components/EditableComponents/EditableImage';\n import EditableItem from './components/EditableComponents/EditableItem';\n+import { DEFAULT_THEME } from '../../theme/theme';\n import TabPositioner from './components/TabPositioner';\n \n // Theme Constants\n export const ELEMENTAL_THEMES = {\n"
                },
                {
                    "date": 1735712485194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,12 +16,30 @@\n import { useTempStore } from '../../contexts/TempStoreContext';\n import EditableText from './components/EditableComponents/EditableText';\n import EditableImage from './components/EditableComponents/EditableImage';\n import EditableItem from './components/EditableComponents/EditableItem';\n-import { DEFAULT_THEME } from '../../theme/theme';\n import TabPositioner from './components/TabPositioner';\n \n // Theme Constants\n+export const DEFAULT_THEME = {\n+  colors: {\n+    background: '#000000',\n+    text: '#FFFFFF',\n+    primary: '#800000',\n+    secondary: '#4A0404',\n+    accent: '#800000',\n+    surface: 'rgba(255, 255, 255, 0.05)'\n+  },\n+  fonts: {\n+    heading: \"'Space Grotesk', sans-serif\",\n+    body: \"'Inter', sans-serif\"\n+  },\n+  styles: {\n+    borderRadius: '12px',\n+    containerWidth: '1400px'\n+  }\n+};\n+\n export const ELEMENTAL_THEMES = {\n   WATER: {\n     id: 'water',\n     name: 'Ocean Depths',\n"
                },
                {
                    "date": 1735712502929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,9 +17,11 @@\n import EditableText from './components/EditableComponents/EditableText';\n import EditableImage from './components/EditableComponents/EditableImage';\n import EditableItem from './components/EditableComponents/EditableItem';\n import TabPositioner from './components/TabPositioner';\n+import { DEFAULT_THEME } from '../../theme/theme';\n \n+\n // Theme Constants\n export const DEFAULT_THEME = {\n   colors: {\n     background: '#000000',\n"
                },
                {
                    "date": 1735712524382,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,27 +21,8 @@\n import { DEFAULT_THEME } from '../../theme/theme';\n \n \n // Theme Constants\n-export const DEFAULT_THEME = {\n-  colors: {\n-    background: '#000000',\n-    text: '#FFFFFF',\n-    primary: '#800000',\n-    secondary: '#4A0404',\n-    accent: '#800000',\n-    surface: 'rgba(255, 255, 255, 0.05)'\n-  },\n-  fonts: {\n-    heading: \"'Space Grotesk', sans-serif\",\n-    body: \"'Inter', sans-serif\"\n-  },\n-  styles: {\n-    borderRadius: '12px',\n-    containerWidth: '1400px'\n-  }\n-};\n-\n export const ELEMENTAL_THEMES = {\n   WATER: {\n     id: 'water',\n     name: 'Ocean Depths',\n"
                }
            ],
            "date": 1735712337787,
            "name": "Commit-0",
            "content": "// Save at: src/pages/shop/LiveShopCreation.js\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport { \n  ChevronLeft, \n  ChevronRight, \n  Settings, \n  Plus,\n  Heart,\n  MessageCircle,\n  Share2,\n  X\n} from 'lucide-react';\nimport { useTempStore } from '../../contexts/TempStoreContext';\nimport EditableText from './components/EditableComponents/EditableText';\nimport EditableImage from './components/EditableComponents/EditableImage';\nimport EditableItem from './components/EditableComponents/EditableItem';\nimport TabPositioner from './components/TabPositioner';\nimport { DEFAULT_THEME } from '../../theme/theme';\n\n// Theme Constants\nexport const ELEMENTAL_THEMES = {\n  WATER: {\n    id: 'water',\n    name: 'Ocean Depths',\n    description: 'Flowing and calm like the deep sea',\n    colors: {\n      background: '#1E3D59',\n      text: '#FFFFFF',\n      primary: '#2D6187',\n      secondary: '#41B3D3',\n      accent: '#41B3D3'\n    },\n    fonts: {\n      heading: \"'Quicksand', sans-serif\",\n      body: \"'Source Sans Pro', sans-serif\"\n    }\n  },\n  FIRE: {\n    id: 'fire',\n    name: 'Ember Forge',\n    description: 'Bold and energetic like flames',\n    colors: {\n      background: '#1A0F0F',\n      text: '#FFFFFF',\n      primary: '#CD2B2B',\n      secondary: '#FF6B4A',\n      accent: '#FFA07A'\n    },\n    fonts: {\n      heading: \"'Bebas Neue', sans-serif\",\n      body: \"'Montserrat', sans-serif\"\n    }\n  },\n  EARTH: {\n    id: 'earth',\n    name: 'Terra Firma',\n    description: 'Grounded and natural like earth',\n    colors: {\n      background: '#1A2213',\n      text: '#E8F3E8',\n      primary: '#2D4A22',\n      secondary: '#5C832F',\n      accent: '#98C379'\n    },\n    fonts: {\n      heading: \"'Playfair Display', serif\",\n      body: \"'Lora', serif\"\n    }\n  },\n  AIR: {\n    id: 'air',\n    name: 'Sky Whisper',\n    description: 'Light and ethereal like the wind',\n    colors: {\n      background: '#2B4865',\n      text: '#FFFFFF',\n      primary: '#6E85B7',\n      secondary: '#C4D7E0',\n      accent: '#F8F9FA'\n    },\n    fonts: {\n      heading: \"'Raleway', sans-serif\",\n      body: \"'Open Sans', sans-serif\"\n    }\n  }\n};\n\n// Navigation Constants\nexport const TAB_POSITIONS = {\n  TOP: 'top',\n  LEFT: 'left',\n  BOTTOM: 'bottom'\n};\n\nexport const SHOP_NAME_POSITIONS = {\n  LEFT: 'left',\n  CENTER: 'center'\n};\n\nconst HiddenInput = styled.input`\n  display: none;\n`;\n\n// Mock Data\nconst MOCK_POSTS = [\n  {\n    id: 1,\n    type: 'media',\n    author: 'ArtisanCrafts',\n    content: 'Just launched our new collection! Check out these handmade pieces. ðŸŽ¨',\n    likes: 42,\n    comments: 12,\n    timeAgo: '2h ago'\n  },\n  {\n    id: 2,\n    type: 'item',\n    author: 'VintageTreasures',\n    item: {\n      name: 'Antique Pocket Watch',\n      price: 299.99,\n      wants: 15\n    },\n    timeAgo: '4h ago'\n  }\n];\n\n// Base Styled Components\n// In LiveShopCreation.js, add these styled components\nconst SelectionBanner = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 80px;\n  background: rgba(0, 0, 0, 0.9);\n  backdrop-filter: blur(10px);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 2rem;\n  z-index: 100;\n  border-bottom: 1px solid rgba(160, 0, 0, 0.3);\n`;\n\n// Update your ThemeHeader styling\nconst ThemeHeader = styled.div`\n  text-align: center;\n  margin-bottom: 4rem;\n\n  h1 {\n    font-family: 'Impact', 'Arial Black', sans-serif;\n    font-size: 4.5rem;\n    margin-bottom: 1rem;\n    background: linear-gradient(45deg, #800000, #4A0404);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    text-shadow: 0 0 30px rgba(128, 0, 0, 0.3);\n    letter-spacing: 2px;\n    transform: skew(-5deg);\n  }\n\n  p {\n    font-size: 1.2rem;\n    line-height: 1.6;\n    max-width: 800px;\n    margin: 0 auto;\n    color: rgba(255, 255, 255, 0.8);\n    font-weight: 300;\n  }\n`;\n\n// Update ThemeSelectorContainer to center content\nconst ThemeSelectorContainer = styled.div`\n  position: relative;\n  min-height: 100vh;\n  padding: 0;\n  overflow: hidden;\n  background: #000000;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: \n      radial-gradient(circle at 20% 30%, rgba(160, 0, 0, 0.2) 0%, transparent 50%),\n      radial-gradient(circle at 80% 70%, rgba(160, 0, 0, 0.15) 0%, transparent 50%);\n    opacity: 0.8;\n    animation: galaxySwirl 30s linear infinite;\n  }\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-image: \n      radial-gradient(circle 1px, #FFF 1px, transparent 1px),\n      radial-gradient(circle 2px, #A00000 1px, transparent 2px);\n    background-size: 200px 200px, 300px 300px;\n    background-position: 0 0;\n    opacity: 0.1;\n    animation: twinkle 4s infinite alternate;\n  }\n\n  .content-wrapper {\n    position: relative;\n    z-index: 1;\n    max-width: ${props => props.theme?.styles?.containerWidth || DEFAULT_THEME.styles.containerWidth};\n    margin: 0 auto;\n    padding: 4rem 2rem;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n`;\n\n\nconst PageContainer = styled.div`\n  min-height: 100vh;\n  background: ${props => props.hasTheme ? props.theme?.colors?.background || DEFAULT_THEME.colors.background : 'transparent'};  // Changed this line\n  color: ${props => props.theme?.colors?.text || DEFAULT_THEME.colors.text};\n  padding-top: ${props => props.hasTheme ? '80px' : '0'};\n  position: relative;\n  overflow-x: hidden;\n`;\n\nconst ShopBanner = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 80px;\n  background: ${props => `${props.theme?.colors?.background || DEFAULT_THEME.colors.background}CC`};\n  backdrop-filter: blur(10px);\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 2rem;\n  z-index: 100;\n  border-bottom: 1px solid ${props => `${props.theme?.colors?.accent || DEFAULT_THEME.colors.accent}30`};\n`;\n\nconst ShopName = styled.div`\n  flex: 1;\n  text-align: ${props => props.position};\n  font-family: ${props => props.theme?.fonts?.heading || DEFAULT_THEME.fonts.heading};\n  font-size: 1.8rem;\n  padding: ${props => props.position === 'center' ? '0 80px' : '0'};\n`;\n\nconst KalkodeLogo = styled.div`\n  color: #800000;\n  font-family: 'Impact', sans-serif;\n  font-size: 2rem;\n  letter-spacing: 2px;\n  transform: skew(-5deg);\n  cursor: pointer;\n  transition: transform 0.3s ease;\n\n  &:hover {\n    transform: skew(-5deg) translateY(-2px);\n  }\n`;\n\nconst KalKodeLogo = styled.div`\n  color: #A00000;\n  font-family: 'Impact', sans-serif;\n  font-size: 2rem;\n  letter-spacing: 2px;\n  transform: skew(-5deg);\n`;\n\nconst MainContent = styled.div`\n  max-width: ${props => props.theme?.styles?.containerWidth || DEFAULT_THEME.styles.containerWidth};\n  margin: 0 auto;\n  padding: 2rem;\n  position: relative;\n  z-index: 1;\n`;\n\nconst ThemeGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 2rem;\n  margin-bottom: 4rem;\n`;\n\nconst ActionButtons = styled.div`\n  position: fixed;\n  bottom: 2rem;\n  right: 2rem;\n  display: flex;\n  gap: 1rem;\n  z-index: 100;\n`;\n\nconst ActionButton = styled.button`\n  background: ${props => props.theme?.colors?.accent || DEFAULT_THEME.colors.accent};\n  color: ${props => props.theme?.colors?.text || DEFAULT_THEME.colors.text};\n  border: none;\n  border-radius: 30px;\n  padding: 1rem 2rem;\n  font-family: ${props => props.theme?.fonts?.heading || DEFAULT_THEME.fonts.heading};\n  font-size: 1rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.8rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst CategoryTabs = styled.div`\n  display: flex;\n  justify-content: center;\n  gap: 1rem;\n  margin-bottom: 3rem;\n`;\n\nconst CategoryTab = styled.button`\n  background: ${props => props.active ? props.theme?.colors?.surface : 'transparent'};\n  border: 1px solid ${props => props.active ? \n    props.theme?.colors?.accent || DEFAULT_THEME.colors.accent : \n    'rgba(255, 255, 255, 0.1)'};\n  color: ${props => props.active ? \n    props.theme?.colors?.text || DEFAULT_THEME.colors.text : \n    `${props.theme?.colors?.text || DEFAULT_THEME.colors.text}80`};\n  padding: 0.8rem 1.5rem;\n  border-radius: 30px;\n  font-family: ${props => props.theme?.fonts?.heading || DEFAULT_THEME.fonts.heading};\n  cursor: pointer;\n  transition: all 0.3s ease;\n\n  &:hover {\n    background: ${props => props.theme?.colors?.surface || 'rgba(255, 255, 255, 0.05)'};\n    border-color: ${props => props.theme?.colors?.accent || DEFAULT_THEME.colors.accent};\n  }\n`;\n\n// Shop View Styled Components\nconst ShopSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst ShopHeader = styled.div`\n  display: flex;\n  gap: 2rem;\n  align-items: start;\n  margin-bottom: 2rem;\n\n  .profile-section {\n    flex-shrink: 0;\n  }\n\n  .info-section {\n    flex: 1;\n  }\n`;\n\n// Update the ItemsGrid styled component\n// Update ItemsGrid back to original size\nconst ItemsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 2rem;\n  margin-bottom: 2rem;\n`;\n\n// Update ItemCard\nconst ItemCard = styled.div`\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: ${props => props.theme?.styles?.borderRadius || '12px'};\n  overflow: hidden;\n  transition: all 0.3s ease;\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  width: 100%;\n  height: 500px; // Fixed height to ensure rectangular shape\n\n  &:hover {\n    transform: translateY(-5px);\n    border-color: ${props => props.theme?.colors?.accent};\n  }\n\n  .item-content {\n    padding: 1.5rem;\n  }\n`;\n\n// Update ItemImageCarousel\nconst ItemImageCarousel = styled.div`\n  position: relative;\n  height: 250px; // Half of ItemCard height\n  width: 100%;\n  display: flex;\n  overflow: hidden;\n  background: rgba(0, 0, 0, 0.1);\n\n  .image-container {\n    width: 100%;\n    height: 100%;\n    position: relative;\n  }\n\n  .carousel-arrow {\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    background: rgba(0, 0, 0, 0.5);\n    border: none;\n    border-radius: 50%;\n    width: 32px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n    cursor: pointer;\n    z-index: 2;\n    transition: all 0.3s ease;\n\n    &:hover {\n      background: rgba(0, 0, 0, 0.8);\n    }\n\n    &.left {\n      left: 10px;\n    }\n\n    &.right {\n      right: 10px;\n    }\n  }\n\n  .add-image {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background: rgba(0, 0, 0, 0.5);\n    border: none;\n    border-radius: 50%;\n    width: 32px;\n    height: 32px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: white;\n    cursor: pointer;\n    z-index: 2;\n\n    &:hover {\n      background: rgba(0, 0, 0, 0.8);\n    }\n  }\n`;\n\nconst AddItemButton = styled.button`\n  background: ${props => props.theme?.colors?.primary || DEFAULT_THEME.colors.primary};\n  color: ${props => props.theme?.colors?.text || DEFAULT_THEME.colors.text};\n  border: none;\n  border-radius: ${props => props.theme?.styles?.borderRadius || DEFAULT_THEME.styles.borderRadius};\n  padding: 1rem 2rem;\n  font-family: ${props => props.theme?.fonts?.heading || DEFAULT_THEME.fonts.heading};\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 0.8rem;\n  margin: 2rem auto;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-2px);\n    background: ${props => props.theme?.colors?.secondary || DEFAULT_THEME.colors.secondary};\n  }\n\n  svg {\n    transition: transform 0.3s ease;\n  }\n\n  &:hover svg {\n    transform: rotate(90deg);\n  }\n`;\n\n// Home View Styled Components\nconst HomeSection = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n\n  .mission-statement {\n    text-align: center;\n    margin: 3rem 0;\n    \n    h3 {\n      font-family: ${props => props.theme?.fonts?.heading || DEFAULT_THEME.fonts.heading};\n      color: ${props => props.theme?.colors?.accent || DEFAULT_THEME.colors.accent};\n      margin-bottom: 1rem;\n    }\n  }\n`;\n\nconst GalleryGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 2rem;\n  margin-top: 3rem;\n`;\n\nconst GalleryCard = styled.div`\n  background: ${props => `${props.theme?.colors?.primary || DEFAULT_THEME.colors.primary}15`};\n  border-radius: ${props => props.theme?.styles?.borderRadius || DEFAULT_THEME.styles.borderRadius};\n  padding: 2rem;\n  text-align: center;\n  border: 1px solid ${props => `${props.theme?.colors?.accent || DEFAULT_THEME.colors.accent}20`};\n  transition: all 0.3s ease;\n\n  h3 {\n    font-family: ${props => props.theme?.fonts?.heading || DEFAULT_THEME.fonts.heading};\n    color: ${props => props.theme?.colors?.accent || DEFAULT_THEME.colors.accent};\n    margin-bottom: 1rem;\n  }\n\n  p {\n    color: ${props => `${props.theme?.colors?.text || DEFAULT_THEME.colors.text}CC`};\n    font-family: ${props => props.theme?.fonts?.body || DEFAULT_THEME.fonts.body};\n    line-height: 1.6;\n  }\n\n  &:hover {\n    transform: translateY(-5px);\n    border-color: ${props => props.theme?.colors?.accent || DEFAULT_THEME.colors.accent};\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n  }\n`;\n\n// Community View Styled Components\nconst CommunitySection = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 2rem;\n`;\n\nconst FeedColumn = styled.div`\n  h2 {\n    font-family: ${props => props.theme?.fonts?.heading || DEFAULT_THEME.fonts.heading};\n    color: ${props => props.theme?.colors?.accent || DEFAULT_THEME.colors.accent};\n    margin-bottom: 2rem;\n  }\n`;\n\nconst PostCard = styled.div`\n  background: ${props => `${props.theme?.colors?.primary || DEFAULT_THEME.colors.primary}15`};\n  border-radius: ${props => props.theme?.styles?.borderRadius || DEFAULT_THEME.styles.borderRadius};\n  overflow: hidden;\n  border: 1px solid ${props => `${props.theme?.colors?.accent || DEFAULT_THEME.colors.accent}20`};\n  margin-bottom: 2rem;\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-5px);\n    border-color: ${props => props.theme?.colors?.accent || DEFAULT_THEME.colors.accent};\n  }\n`;\n\nconst PostContent = styled.div`\n  padding: 1.5rem;\n\n  h3 {\n    font-family: ${props => props.theme?.fonts?.heading || DEFAULT_THEME.fonts.heading};\n    color: ${props => props.theme?.colors?.text || DEFAULT_THEME.colors.text};\n    margin-bottom: 1rem;\n  }\n\n  p {\n    color: ${props => `${props.theme?.colors?.text || DEFAULT_THEME.colors.text}CC`};\n    line-height: 1.6;\n    margin-bottom: 1rem;\n  }\n\n  .timestamp {\n    font-size: 0.9rem;\n    color: ${props => `${props.theme?.colors?.text || DEFAULT_THEME.colors.text}80`};\n  }\n`;\n\nconst PostActions = styled.div`\n  display: flex;\n  gap: 1rem;\n  padding: 1rem 1.5rem;\n  border-top: 1px solid ${props => `${props.theme?.colors?.accent || DEFAULT_THEME.colors.accent}20`};\n\n  button {\n    background: transparent;\n    border: none;\n    color: ${props => `${props.theme?.colors?.text || DEFAULT_THEME.colors.text}CC`};\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    cursor: pointer;\n    transition: all 0.2s;\n    padding: 0.5rem;\n    border-radius: 4px;\n\n    &:hover {\n      color: ${props => props.theme?.colors?.accent || DEFAULT_THEME.colors.accent};\n      background: ${props => `${props.theme?.colors?.accent || DEFAULT_THEME.colors.accent}15`};\n    }\n  }\n`;\n\nconst GlobalStyles = createGlobalStyle`\n  .ping {\n    position: absolute;\n    width: 2px;\n    height: 2px;\n    border-radius: 50%;\n    background: #800000;\n    pointer-events: none;\n  }\n\n  .ping::before {\n    content: '';\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 200px;\n    height: 200px;\n    transform: translate(-50%, -50%);\n    border-radius: 50%;\n    background: radial-gradient(circle, rgba(128, 0, 0, 0.4) 0%, transparent 70%);\n    animation: ping 2s ease-out forwards;\n  }\n\n  @keyframes ping {\n    0% {\n      width: 0px;\n      height: 0px;\n      opacity: 1;\n    }\n    100% {\n      width: 200px;\n      height: 200px;\n      opacity: 0;\n    }\n  }\n`;\n\n// Main Component\nconst LiveShopCreation = () => {\n  const navigate = useNavigate();\n  const { saveTempStore } = useTempStore();\n  \n  // State\n  const [currentStep, setCurrentStep] = useState(1);\n  const [selectedTheme, setSelectedTheme] = useState(DEFAULT_THEME);\n  const [hasSelectedTheme, setHasSelectedTheme] = useState(false);\n  const [shopNamePosition, setShopNamePosition] = useState(SHOP_NAME_POSITIONS.LEFT);\n  const [tabPosition, setTabPosition] = useState(TAB_POSITIONS.TOP);\n  const [activeTab, setActiveTab] = useState('shop');\n  const [isPurchasing, setIsPurchasing] = useState(false);\n  \n  const [shopData, setShopData] = useState({\n    name: '',\n    description: '',\n    profile: null,\n    mission: '',\n    location: '',\n    items: [{\n      id: 1,\n      name: 'New Item',\n      price: '',\n      description: 'Describe your item here',\n      images: [null, null, null], // Initialize with three empty slots\n      currentImageIndex: 0,\n      location: '',\n      tags: [],\n      wants: 0\n    }],\n    wants: {},\n    layout: {\n      namePosition: SHOP_NAME_POSITIONS.LEFT,\n      tabPosition: TAB_POSITIONS.TOP\n    }\n  });\n\n  // Theme Selection Handler\n  const handleThemeSelect = (themeId) => {\n    console.log('Theme selected:', themeId); // For debugging\n    \n    const themeData = ELEMENTAL_THEMES[themeId];\n    if (themeData) {\n      const newTheme = {\n        ...DEFAULT_THEME,\n        ...themeData,\n        id: themeId\n      };\n      setSelectedTheme(newTheme);\n      setHasSelectedTheme(true); // This should trigger the view change\n    }\n  };\n\n  // Shop Data Handlers\n  const handleShopDataChange = (field, value) => {\n    setShopData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleItemAdd = () => {\n    setShopData(prev => ({\n      ...prev,\n      items: [...prev.items, {\n        id: Date.now(),\n        name: '',\n        price: '',\n        description: '',\n        images: [null, null, null], // Initialize with three empty slots\n        currentImageIndex: 0,\n        location: '',\n        tags: [],\n        wants: 0\n      }]\n    }));\n  };\n  const handleItemUpdate = (itemId, updatedItem) => {\n    setShopData(prev => ({\n      ...prev,\n      items: prev.items.map(item => \n        item.id === itemId ? { ...updatedItem } : item\n      )\n    }));\n  };\n\n  const handleItemDelete = (itemId) => {\n    setShopData(prev => ({\n      ...prev,\n      items: prev.items.filter(item => item.id !== itemId)\n    }));\n  };\n\n  // Render Methods\n  const renderThemeSelector = () => (\n    <ThemeSelectorContainer className=\"theme-selector-container\">\n      <SelectionBanner>\n        <KalkodeLogo onClick={() => navigate('/')}>KALKODE</KalkodeLogo>\n      </SelectionBanner>\n      <div className=\"content-wrapper\">\n        <ThemeHeader>\n          <h1>Choose Your Theme</h1>\n          <p>Select a theme that reflects your brand's personality.</p>\n        </ThemeHeader>\n        <ThemeGrid>\n          {Object.entries(ELEMENTAL_THEMES).map(([id, theme]) => (\n            <div\n              key={id}\n              onClick={() => handleThemeSelect(id)}\n              style={{\n                cursor: 'pointer',\n                padding: '20px',\n                border: `1px solid ${theme.colors.accent}`,\n                borderRadius: '8px',\n                background: theme.colors.background,\n                transition: 'all 0.3s ease',\n              }}\n            >\n              <h3 style={{ color: theme.colors.text }}>{theme.name}</h3>\n              <p style={{ color: theme.colors.text }}>{theme.description}</p>\n            </div>\n          ))}\n        </ThemeGrid>\n      </div>\n    </ThemeSelectorContainer>\n  );\n\n  const ShopProfileSection = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  max-width: 800px;\n  margin: 0 auto 3rem auto;\n  padding: 2rem;\n\n  .profile-image {\n    margin-bottom: 2rem;\n  }\n\n  .shop-name {\n    margin-bottom: 1.5rem;\n    width: 100%;\n    font-family: ${props => props.theme?.fonts?.heading};\n  }\n\n  .shop-description {\n    width: 100%;\n  }\n`;\nconst handleAddImage = (itemId, newImage) => {\n  setShopData(prev => ({\n    ...prev,\n    items: prev.items.map(item => {\n      if (item.id === itemId && item.images.length < 3) {\n        return {\n          ...item,\n          images: [...item.images, newImage]\n        };\n      }\n      return item;\n    })\n  }));\n};\n\n// Then update your renderShopView method\n\nconst renderShopView = () => (\n  <MainContent>\n    <ShopProfileSection>\n      <div className=\"profile-image\">\n        <EditableImage\n          value={shopData.profile}\n          onChange={(value) => handleShopDataChange('profile', value)}\n          theme={selectedTheme}\n          round\n          width=\"150px\"\n          height=\"150px\"\n        />\n      </div>\n      <div className=\"shop-name\">\n        <EditableText\n          value={shopData.name}\n          onChange={(value) => handleShopDataChange('name', value)}\n          placeholder=\"Enter Your Shop Name\"\n          theme={selectedTheme}\n          fontSize=\"2rem\"\n          fontWeight=\"bold\"\n        />\n      </div>\n      <div className=\"shop-description\">\n        <EditableText\n          value={shopData.description}\n          onChange={(value) => handleShopDataChange('description', value)}\n          placeholder=\"Tell people about your shop...\"\n          multiline\n          theme={selectedTheme}\n        />\n      </div>\n    </ShopProfileSection>\n\n    <ItemsGrid>\n      {shopData.items.map(item => (\n        <ItemCard key={item.id}>\n          <ItemImageCarousel>\n            <div className=\"image-container\">\n              <EditableImage\n                value={item.images[item.currentImageIndex]}\n                onChange={(value) => {\n                  const newImages = [...item.images];\n                  newImages[item.currentImageIndex] = value;\n                  handleItemUpdate(item.id, { \n                    ...item, \n                    images: newImages\n                  });\n                }}\n                theme={selectedTheme}\n                height=\"100%\"\n                width=\"100%\"\n                round={false}\n              />\n            </div>\n              \n            <button \n              className=\"carousel-arrow left\"\n              onClick={() => {\n                const newIndex = ((item.currentImageIndex - 1) + 3) % 3;\n                handleItemUpdate(item.id, { ...item, currentImageIndex: newIndex });\n              }}\n            >\n              <ChevronLeft size={16} />\n            </button>\n            <button \n              className=\"carousel-arrow right\"\n              onClick={() => {\n                const newIndex = (item.currentImageIndex + 1) % 3;\n                handleItemUpdate(item.id, { ...item, currentImageIndex: newIndex });\n              }}\n            >\n              <ChevronRight size={16} />\n            </button>\n\n            {item.images[item.currentImageIndex] ? (\n              <button \n                className=\"add-image\"\n                onClick={() => {\n                  const newImages = [...item.images];\n                  newImages[item.currentImageIndex] = null;\n                  handleItemUpdate(item.id, { \n                    ...item, \n                    images: newImages\n                  });\n                }}\n              >\n                <X size={16} />\n              </button>\n            ) : (\n              <button \n                className=\"add-image\"\n                onClick={() => {\n                  const input = document.getElementById(`image-input-${item.id}`);\n                  if (input) input.click();\n                }}\n              >\n                <Plus size={16} />\n              </button>\n            )}\n            \n            {!item.images[item.currentImageIndex] && (\n              <button \n                className=\"add-image\"\n                onClick={() => {\n                  const input = document.getElementById(`image-input-${item.id}`);\n                  if (input) input.click();\n                }}\n              >\n                <Plus size={16} />\n              </button>\n            )}\n\n            <HiddenInput\n              type=\"file\"\n              id={`image-input-${item.id}`}\n              accept=\"image/*\"\n              onChange={(e) => {\n                if (e.target.files?.[0]) {\n                  const newImages = [...item.images];\n                  newImages[item.currentImageIndex] = e.target.files[0];\n                  handleItemUpdate(item.id, { \n                    ...item, \n                    images: newImages\n                  });\n                }\n              }}\n            />\n          </ItemImageCarousel>\n          \n          <div className=\"item-content\">\n            <EditableText\n              value={item.name}\n              onChange={(value) => handleItemUpdate(item.id, { ...item, name: value })}\n              placeholder=\"Item Name\"\n              theme={selectedTheme}\n              fontSize=\"1.2rem\"\n              fontWeight=\"bold\"\n            />\n            <EditableText\n              value={item.price}\n              onChange={(value) => handleItemUpdate(item.id, { ...item, price: value })}\n              placeholder=\"Price\"\n              theme={selectedTheme}\n            />\n            <EditableText\n              value={item.description}\n              onChange={(value) => handleItemUpdate(item.id, { ...item, description: value })}\n              placeholder=\"Item Description\"\n              multiline\n              theme={selectedTheme}\n            />\n          </div>\n        </ItemCard>\n      ))}\n    </ItemsGrid>\n\n    <AddItemButton onClick={handleItemAdd} theme={selectedTheme}>\n      <Plus size={20} />\n      Add Item\n    </AddItemButton>\n    </MainContent>\n  );\n\n  const renderHomeView = () => (\n    <HomeSection>\n      <div className=\"mission-statement\">\n        <h3>Mission Statement</h3>\n        <EditableText\n          value={shopData.mission}\n          onChange={(value) => handleShopDataChange('mission', value)}\n          placeholder=\"What's your shop's mission?\"\n          multiline\n          maxLength={500}\n          theme={selectedTheme}\n        />\n      </div>\n\n      <GalleryGrid>\n        {['Events', 'Activities', 'Features', 'Updates'].map(section => (\n          <GalleryCard key={section}>\n            <h3>{section}</h3>\n            <p>Content will be editable after signup</p>\n          </GalleryCard>\n        ))}\n      </GalleryGrid>\n    </HomeSection>\n  );\n\n  const renderCommunityView = () => (\n    <CommunitySection>\n      <FeedColumn>\n        <h2>Media Posts</h2>\n        {MOCK_POSTS\n          .filter(post => post.type === 'media')\n          .map(post => (\n            <PostCard key={post.id}>\n              <PostContent>\n                <h3>{post.author}</h3>\n                <p>{post.content}</p>\n                <span className=\"timestamp\">{post.timeAgo}</span>\n              </PostContent>\n              <PostActions>\n                <button><Heart size={18} /> {post.likes}</button>\n                <button><MessageCircle size={18} /> {post.comments}</button>\n                <button><Share2 size={18} /></button>\n              </PostActions>\n            </PostCard>\n          ))}\n      </FeedColumn>\n\n      <FeedColumn>\n        <h2>Featured Items</h2>\n        {MOCK_POSTS\n          .filter(post => post.type === 'item')\n          .map(post => (\n            <PostCard key={post.id}>\n              <PostContent>\n                <h3>{post.author}</h3>\n                <div>\n                  <h4>{post.item.name}</h4>\n                  <p>${post.item.price}</p>\n                </div>\n              </PostContent>\n              <PostActions>\n                <button><Heart size={18} /> {post.item.wants}</button>\n                <button><Share2 size={18} /></button>\n              </PostActions>\n            </PostCard>\n          ))}\n      </FeedColumn>\n    </CommunitySection>\n  );\n\n  // Main Render\n  return (\n    <ThemeProvider theme={selectedTheme}>\n      <GlobalStyles />\n      <PageContainer hasTheme={hasSelectedTheme}>\n        {!hasSelectedTheme ? (\n          renderThemeSelector()\n        ) : (\n          <>\n            <ShopBanner>\n              <ShopName position={shopNamePosition}>\n                {shopData.name || \"Your Shop Name\"}\n              </ShopName>\n              <KalKodeLogo onClick={() => navigate('/')}>\n                KALKODE\n              </KalKodeLogo>\n            </ShopBanner>\n\n            <TabPositioner\n              position={tabPosition}\n              onPositionChange={setTabPosition}\n              activeTab={activeTab}\n              onTabChange={setActiveTab}\n              tabs={[\n                { id: 'shop', label: 'Shop' },\n                { id: 'home', label: 'Home' },\n                { id: 'community', label: 'Community' }\n              ]}\n              theme={selectedTheme}\n            />\n\n            <MainContent>\n              {activeTab === 'shop' && renderShopView()}\n              {activeTab === 'home' && renderHomeView()}\n              {activeTab === 'community' && renderCommunityView()}\n            </MainContent>\n\n            <ActionButtons>\n              <ActionButton onClick={() => setHasSelectedTheme(false)}>\n                <Settings size={20} />\n                Change Theme\n              </ActionButton>\n              <ActionButton\n                onClick={() => {\n                  const shopDataToSave = {\n                    ...shopData,\n                    theme: selectedTheme,\n                    layout: {\n                      namePosition: shopNamePosition,\n                      tabPosition: tabPosition\n                    },\n                    // Properly structure profile image\n                    profile: shopData.profile ? {\n                      file: shopData.profile.file,\n                      type: shopData.profile.type\n                    } : null,\n                    // Properly structure item images\n                    items: shopData.items.map(item => ({\n                      ...item,\n                      images: item.images.map(img => img ? {\n                        file: img.file,\n                        type: img.type\n                      } : null)\n                    }))\n                  };\n                  console.log('Shop data being passed:', shopDataToSave);\n                  navigate('/auth', {\n                    state: { \n                      mode: 'signup', \n                      tempData: shopDataToSave \n                    }\n                  });\n                }}\n                disabled={!shopData.name}\n              >\n                Continue to Signup\n                <ChevronRight size={20} />\n              </ActionButton>\n            </ActionButtons>\n          </>\n        )}\n      </PageContainer>\n    </ThemeProvider>\n  );\n};\n\nexport default LiveShopCreation;"
        }
    ]
}